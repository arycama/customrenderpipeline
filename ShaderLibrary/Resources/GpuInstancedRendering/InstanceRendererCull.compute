 #pragma kernel Visibility

#pragma multi_compile _ HIZ_ON

#include "../../Common.hlsl"
#include "../../TerrainCommon.hlsl"
#include "../../Packing.hlsl"
#include "../../MatrixUtils.hlsl"
#include "../../IndirectRendering.hlsl"

float _MaxHiZMip;
uint _InstanceCount;

StructuredBuffer<float4> _InstanceBounds;
RWStructuredBuffer<uint> _RendererInstanceIDs;

bool IsVisible(float3 boundsCenter, float3 boundsExtents)
{
	if (!FrustumCull(boundsCenter, boundsExtents))
		return false;
		
	#ifdef HIZ_ON
		return HiZCull(boundsCenter, boundsExtents, ViewSize, _MaxHiZMip, HiZMaxDepth, WorldToScreen);
	#else
		return true;
	#endif
}

[numthreads(1024, 1, 1)]
void Visibility(uint id : SV_DispatchThreadID)
{
	if (id >= _InstanceCount)
		return;
		
	float4 boundsData = _InstanceBounds[id];
	float3 boundsCenter = boundsData.xyz - ViewPosition;
	float3 boundsExtents = R11G11B10ToFloat3(asuint(boundsData.w));
	
	_RendererInstanceIDs[id] = IsVisible(boundsCenter, boundsExtents);
}
